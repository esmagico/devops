services:
  epic_global_ai:
      image: ghcr.io/${org}/epic-global-ai-services:${EPIC_GLOBAL_AI_IMAGE_TAG:-${DEFAULT_IMAGE_TAG:?DEFAULT_IMAGE_TAG is not set}}
      restart: always
      environment:
        AI_SERVICE_GEMINI_KEY: ${AI_SERVICE_GEMINI_KEY:?AI_SERVICE_GEMINI_KEY is not set}
        AI_SERVICE_DATABASE_URI: ${AI_SERVICE_DATABASE_URL:?AI_SERVICE_DATABASE_URL is not set}
        AI_SERVICE_CELERY_BROKER_URL: ${AI_SERVICE_CELERY_BROKER_URL:?AI_SERVICE_CELERY_BROKER_URL is not set}
        AI_SERVICE_CELERY_RESULT_BACKEND: ${AI_SERVICE_CELERY_RESULT_BACKEND:?AI_SERVICE_CELERY_RESULT_BACKEND is not set}
        AI_SERVICE_BACKEND_BASE_URL: ${AI_SERVICE_BACKEND_BASE_URL:?AI_SERVICE_BACKEND_BASE_URL is not set}
        AI_SERVICE_CONTEXT_SERVICE_BASE_URL: ${AI_SERVICE_CONTEXT_SERVICE_BASE_URL:?AI_SERVICE_CONTEXT_SERVICE_BASE_URL is not set}
        AI_SERVICE_CONTEXT_SERVICE_MAX_RETRIES: ${AI_SERVICE_CONTEXT_SERVICE_MAX_RETRIES:?AI_SERVICE_CONTEXT_SERVICE_MAX_RETRIES is not set}
        AI_SERVICE_AUTH_EMAIL: ${AI_SERVICE_AUTH_EMAIL:?AI_SERVICE_AUTH_EMAIL is not set}
        AI_SERVICE_AUTH_PASSWORD: ${AI_SERVICE_AUTH_PASSWORD:?AI_SERVICE_AUTH_PASSWORD is not set}
        AI_SERVICE_APP_PORT: ${AI_SERVICE_APP_PORT:?AI_SERVICE_APP_PORT is not set}
        AI_SERVICE_CASSANDRA_HOST: ${AI_SERVICE_CASSANDRA_HOST:?AI_SERVICE_CASSANDRA_HOST is not set}
        AI_SERVICE_CASSANDRA_PORT: ${AI_SERVICE_CASSANDRA_PORT:?AI_SERVICE_CASSANDRA_PORT is not set}
        AI_SERVICE_CASSANDRA_USER: ${AI_SERVICE_CASSANDRA_USER:?AI_SERVICE_CASSANDRA_USER is not set}
        AI_SERVICE_CASSANDRA_PASSWORD: ${AI_SERVICE_CASSANDRA_PASSWORD:?AI_SERVICE_CASSANDRA_PASSWORD is not set}
        AI_SERVICE_CONTRACT_BASE_URL: ${AI_SERVICE_CONTRACT_BASE_URL:?AI_SERVICE_CONTRACT_BASE_URL is not set}
        AI_SERVICE_SCRAPER_AUTH: ${AI_SERVICE_SCRAPER_AUTH:?AI_SERVICE_SCRAPER_AUTH is not set}
        AI_SERVICE_SWAGGER_PASSWORD: ${AI_SERVICE_SWAGGER_PASSWORD:?AI_SERVICE_SWAGGER_PASSWORD is not set}
        AI_SERVICE_SWAGGER_USER: ${AI_SERVICE_SWAGGER_USER:?AI_SERVICE_SWAGGER_USER is not set}
        AI_SERVICE_TELEMETRY_URI: ${AI_SERVICE_TELEMETRY_URI:?AI_SERVICE_TELEMETRY_URI is not set}
        AI_SERVICE_CONTEXT_API_KEY: ${AI_SERVICE_CONTEXT_API_KEY:?AI_SERVICE_CONTEXT_API_KEY is not set}
  
  # ToDo: Figure out a way to dockerize celery in a proper way.
  celery:
      image: ghcr.io/${org}/epic-global-ai-services:${EPIC_GLOBAL_AI_IMAGE_TAG:-${DEFAULT_IMAGE_TAG:?DEFAULT_IMAGE_TAG is not set}}
      restart: always
      command: celery -A app.celery_app.app worker --loglevel=info
      depends_on:
        - rabbitmq
        - redis
      environment:
        AI_SERVICE_GEMINI_KEY: ${AI_SERVICE_GEMINI_KEY:?AI_SERVICE_GEMINI_KEY is not set}
        AI_SERVICE_DATABASE_URI: ${AI_SERVICE_DATABASE_URL:?AI_SERVICE_DATABASE_URL is not set}
        AI_SERVICE_CELERY_BROKER_URL: ${AI_SERVICE_CELERY_BROKER_URL:?AI_SERVICE_CELERY_BROKER_URL is not set}
        AI_SERVICE_CELERY_RESULT_BACKEND: ${AI_SERVICE_CELERY_RESULT_BACKEND:?AI_SERVICE_CELERY_RESULT_BACKEND is not set}
        AI_SERVICE_BACKEND_BASE_URL: ${AI_SERVICE_BACKEND_BASE_URL:?AI_SERVICE_BACKEND_BASE_URL is not set}
        AI_SERVICE_CONTEXT_SERVICE_BASE_URL: ${AI_SERVICE_CONTEXT_SERVICE_BASE_URL:?AI_SERVICE_CONTEXT_SERVICE_BASE_URL is not set}
        AI_SERVICE_CONTEXT_SERVICE_MAX_RETRIES: ${AI_SERVICE_CONTEXT_SERVICE_MAX_RETRIES:?AI_SERVICE_CONTEXT_SERVICE_MAX_RETRIES is not set}
        AI_SERVICE_AUTH_EMAIL: ${AI_SERVICE_AUTH_EMAIL:?AI_SERVICE_AUTH_EMAIL is not set}
        AI_SERVICE_AUTH_PASSWORD: ${AI_SERVICE_AUTH_PASSWORD:?AI_SERVICE_AUTH_PASSWORD is not set}
        AI_SERVICE_APP_PORT: ${AI_SERVICE_APP_PORT:?AI_SERVICE_APP_PORT is not set}
        AI_SERVICE_CASSANDRA_HOST: ${AI_SERVICE_CASSANDRA_HOST:?AI_SERVICE_CASSANDRA_HOST is not set}
        AI_SERVICE_CASSANDRA_PORT: ${AI_SERVICE_CASSANDRA_PORT:?AI_SERVICE_CASSANDRA_PORT is not set}
        AI_SERVICE_CASSANDRA_USER: ${AI_SERVICE_CASSANDRA_USER:?AI_SERVICE_CASSANDRA_USER is not set}
        AI_SERVICE_CASSANDRA_PASSWORD: ${AI_SERVICE_CASSANDRA_PASSWORD:?AI_SERVICE_CASSANDRA_PASSWORD is not set}
        AI_SERVICE_CONTRACT_BASE_URL: ${AI_SERVICE_CONTRACT_BASE_URL:?AI_SERVICE_CONTRACT_BASE_URL is not set}
        AI_SERVICE_SCRAPER_AUTH: ${AI_SERVICE_SCRAPER_AUTH:?AI_SERVICE_SCRAPER_AUTH is not set}
        AI_SERVICE_SWAGGER_PASSWORD: ${AI_SERVICE_SWAGGER_PASSWORD:?AI_SERVICE_SWAGGER_PASSWORD is not set}
        AI_SERVICE_SWAGGER_USER: ${AI_SERVICE_SWAGGER_USER:?AI_SERVICE_SWAGGER_USER is not set}
        AI_SERVICE_TELEMETRY_URI: ${AI_SERVICE_TELEMETRY_URI:?AI_SERVICE_TELEMETRY_URI is not set}
        AI_SERVICE_CONTEXT_API_KEY: ${AI_SERVICE_CONTEXT_API_KEY:?AI_SERVICE_CONTEXT_API_KEY is not set}

  # ToDo: The redis and db instances should be shared across instances. To be discussed
  redis-backend:
      image: redis:bookworm
      restart: always

  db-ai:
    image: postgres:14.15-alpine3.21
    restart: always
    ports:
      - "5432:5432" 
    volumes:
      - db-ai:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:?POSTGRES_USER is not set}", "-d", "${POSTGRES_DB_AI:?POSTGRES_DB is not set}"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${POSTGRES_USER:?POSTGRES_USER is not set}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD is not set}
      POSTGRES_DB: ${POSTGRES_DB_AI:?POSTGRES_DB_AI is not set}

volumes:
  db-ai: